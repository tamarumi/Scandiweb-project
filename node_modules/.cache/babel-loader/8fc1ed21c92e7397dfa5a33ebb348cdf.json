{"ast":null,"code":"import * as PropTypes from 'prop-types';\nimport { useSubscription } from \"../hooks/index.js\";\nexport function Subscription(props) {\n  var result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\nSubscription.propTypes = {\n  subscription: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  children: PropTypes.func,\n  onSubscriptionData: PropTypes.func,\n  onSubscriptionComplete: PropTypes.func,\n  shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,YAA3B;AAIA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAM,SAAUC,YAAV,CACJC,KADI,EACkD;EAEtD,IAAMC,MAAM,GAAGH,eAAe,CAACE,KAAK,CAACE,YAAP,EAAqBF,KAArB,CAA9B;EACA,OAAOA,KAAK,CAACG,QAAN,IAAkBF,MAAlB,GAA2BD,KAAK,CAACG,QAAN,CAAeF,MAAf,CAA3B,GAAoD,IAA3D;AACD;AAMDF,YAAY,CAACK,SAAb,GAAyB;EACvBF,YAAY,EAAEL,SAAS,CAACQ,MAAV,CAAiBC,UADR;EAEvBC,SAAS,EAAEV,SAAS,CAACQ,MAFE;EAGvBF,QAAQ,EAAEN,SAAS,CAACW,IAHG;EAIvBC,kBAAkB,EAAEZ,SAAS,CAACW,IAJP;EAKvBE,sBAAsB,EAAEb,SAAS,CAACW,IALX;EAMvBG,iBAAiB,EAAEd,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACW,IAAX,EAAiBX,SAAS,CAACgB,IAA3B,CAApB;AANI,CAAzB","names":["PropTypes","useSubscription","Subscription","props","result","subscription","children","propTypes","object","isRequired","variables","func","onSubscriptionData","onSubscriptionComplete","shouldResubscribe","oneOfType","bool"],"sources":["/Users/tamarphotskhverashvili/Desktop/scandiweb-project/node_modules/@apollo/src/react/components/Subscription.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types';\n\nimport { OperationVariables } from '../../core';\nimport { SubscriptionComponentOptions } from './types';\nimport { useSubscription } from '../hooks';\n\nexport function Subscription<TData = any, TVariables = OperationVariables>(\n  props: SubscriptionComponentOptions<TData, TVariables>\n) {\n  const result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\nexport interface Subscription<TData, TVariables> {\n  propTypes: PropTypes.InferProps<SubscriptionComponentOptions<TData, TVariables>>;\n}\n\nSubscription.propTypes = {\n  subscription: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  children: PropTypes.func,\n  onSubscriptionData: PropTypes.func,\n  onSubscriptionComplete: PropTypes.func,\n  shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n} as Subscription<any, any>[\"propTypes\"];\n"]},"metadata":{},"sourceType":"module"}